#+TITLE: Editing emacs packages

  Recently I wanted to add some functionality in an emacs package (see the relevant [[https://github.com/diadochos/org-babel-eval-in-repl/issues/15][issue]])
  
  I started writing this post after I had submitted the PR so the order will go like this:
  1. specifying specific branch of remote repo for package
     # could skip this entirely after writing the whole post
  2. making local changes to the package
  3. publishing again the changes, submitting PR

* TODO needs work
* Using custom repo for packages
  Making use of straight.el to use my forks
  #+BEGIN_SRC emacs-lisp
(use-package eval-in-repl
  :straight
  (eval-in-repl
   :type git :host github :repo "kaz-yos/eval-in-repl"
   :fork (:host github :repo "actondev/eval-in-repl" :branch "feature/multiple_sh_sessions"))
  )

(use-package org-babel-eval-in-repl
  :straight
  (org-babel-eval-in-repl
   :type git :host github :repo "diadochos/org-babel-eval-in-repl"
   :fork (:host github :repo "actondev/org-babel-eval-in-repl" :branch "feature/multiple_sh_sessions"))
  :bind
  (:map org-mode-map
	("C-<return>" . ober-eval-in-repl)))
  #+END_SRC

  Note: the repeated name after the :straight is apparently needed, if not the elpa package was used in my case. That doesn't match the documentation in https://github.com/raxod502/straight.el
* Using local repo/folder
  TBD
  #+BEGIN_SRC emacs-lisp
(use-package eval-in-repl)
  #+END_SRC

  #+RESULTS:
